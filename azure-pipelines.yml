# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool: Default

variables:
  appName: 'dev-cesizen-backend'
  resourceGroup: 'cesi-bloc'

steps:
- task: Maven@4
  displayName: 'Run Maven unit tests'
  inputs:
    mavenPomFile: 'cesizen-simon/backend/pom.xml'
    goals: 'clean verify'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    codeCoverageToolOption: 'JaCoCo'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    isJacocoCoverageReportXML: true
    sqMavenPluginVersionChoice: 'latest'

# Installer Maven (si nécessaire)
- task: Maven@4
  displayName: 'Build backend Java'
  inputs:
    mavenPomFile: 'cesizen-simon/backend/pom.xml'
    goals: 'clean package -DskipTests'

# Préparer le package ZIP avec le .jar
- script: |
    mkdir -p deploy
    cp backend/target/*.jar deploy/
    cd deploy
    zip -r ../app-package.zip *
  displayName: 'Préparer package ZIP'

# Publier l'artefact (optionnel, utile pour debug)
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'app-package.zip'
    ArtifactName: 'drop'

# Déployer sur Azure App Service
- task: AzureWebApp@1
  inputs:
    appType: webAppLinux
    azureSubscription: 'dev-cesizen-backend-connection'
    appName: $(appName)
    package: '$(System.DefaultWorkingDirectory)/app-package.zip'